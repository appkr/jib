name: Native Image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    # "macos-aarch64" is NOT provided by github
    # self-hosted runners: https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: GraalVM setup
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.3.1
          java-version: '11'
          cache: gradle
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set env vars
        id: vars
        run: |
          echo "VERSION=$(cat jib-cli/gradle.properties | head -n 1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+-.*')" >> $GITHUB_OUTPUT

          PLATFORM=${{ matrix.os }}
          if [ $PLATFORM == "macos-latest" ]; then
            PLATFORM=macos-amd64
          elif [ $PLATFORM == "ubuntu-latest" ]; then
            PLATFORM=ubuntu-amd64
          fi
          echo "PLATFORM=$PLATFORM" >> $GITHUB_OUTPUT

      - name: Build an executable and native image
        run: |
          # CLASSPATH=./jib-cli/build/install/jib/lib/*
          # MAIN_FQCN=com.google.cloud.tools.jib.cli.JibCli
          # META_DIR=./jib-cli/src/main/resources/META-INF/native-image
          # java -agentlib:native-image-agent=config-merge-dir=$META_DIR -cp $CLASSPATH $MAIN_FQCN
          # java -agentlib:native-image-agent=config-merge-dir=$META_DIR -cp $CLASSPATH $MAIN_FQCN build -b jib-cli/quickstart/jib.yaml -c jib-cli/quickstart -t tar://./jib-cli-quickstart.tar --name jib-cli-quickstart

          ./gradlew :jib-cli:nativeCompile -DgraalvmNative.agent.enabled=true

          PWD=`pwd`
          cd jib-cli/build/native/nativeCompile
          echo ${{ steps.vars.outputs.VERSION }} > version.txt
          zip jib-cli-${{ steps.vars.outputs.VERSION }}-${{ steps.vars.outputs.PLATFORM }}.zip jib-cli
          cd $PWD

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: native
          path: |
            jib-cli/build/native/nativeCompile/version.txt
            jib-cli/build/native/nativeCompile/jib-cli-*.zip
          retention-days: 1

  # Settings > Actions > Workflow permissions > Read and Write permissions
  # https://github.com/marvinpinto/actions/issues/61
  # https://electricui.com/blog/github-actions
  release:
    name: Create prerelease
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Display fetched artifacts
        run: ls -alR

      - name: Set env vars
        id: vars
        run: |
          echo "VERSION=$(cat native/version.txt | head -n 1)" >> $GITHUB_OUTPUT

      - name: Create a github release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.vars.outputs.VERSION }}
          prerelease: true
          title: Development Build
          files: |
            native/jib-cli-*.zip
